<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- ========= -->
	<!--  PROJECT  -->
	<!-- ========= -->
	<groupId>com.coyote.big_city_library</groupId>
	<artifactId>rest_server</artifactId>
	<version>1.2.0</version>
	<packaging>pom</packaging>

	<name>rest_server</name>
	<description>Project for OpenClassrooms : RESTful server for libraries in a big city</description>

	<!-- ====================== -->
	<!--  PARENT : Spring Boot  -->
	<!-- ====================== -->
	<!-- Doc : https://docs.spring.io/spring-boot/docs/2.6.8/maven-plugin/reference/htmlsingle/ -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.15</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<!-- ========= -->
	<!--  MODULES  -->
	<!-- ========= -->
	<modules>
		<module>rest_server_controller</module>
		<module>rest_server_model</module>
		<module>rest_server_repository</module>
		<module>rest_server_service</module>
	</modules>

	<!-- ============ -->
	<!--  PROPERTIES  -->
	<!-- ============ -->
	<properties>
		<!-- The entry point class to start the app -->
		<start-class>
			com.coyote.big_city_library.rest_server_controller.RestServerControllerApplication
		</start-class>
		<!-- Project Version -->
		<revision>1.2.0</revision>
		<!-- Encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- Java version -->
		<java.version>11</java.version>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<!-- TimeZone -->
		<spring-boot.run.jvmArguments>-Duser.timezone=UTC</spring-boot.run.jvmArguments>
		<!-- Dependencies versions -->
		<mysql-connector-java.version>8.0.29</mysql-connector-java.version>
		<lombok.version>1.18.24</lombok.version>
		<org.mapstruct.version>1.4.2.Final</org.mapstruct.version>
		<lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
		<jjwt.version>0.9.1</jjwt.version>
		<jacoco.version>0.8.10</jacoco.version>
	</properties>

	<!-- ============== -->
	<!--  DEPENDENCIES  -->
	<!-- ============== -->

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>com.coyote.big_city_library</groupId>
				<artifactId>rest_server_controller</artifactId>
				<version>${revision}</version>
			</dependency>

			<dependency>
				<groupId>com.coyote.big_city_library</groupId>
				<artifactId>rest_server_model</artifactId>
				<version>${revision}</version>
			</dependency>

			<dependency>
				<groupId>com.coyote.big_city_library</groupId>
				<artifactId>rest_server_repository</artifactId>
				<version>${revision}</version>
			</dependency>

			<dependency>
				<groupId>com.coyote.big_city_library</groupId>
				<artifactId>rest_server_service</artifactId>
				<version>${revision}</version>
			</dependency>

			<!-- ========================================= -->
			<!--   Spring Framework - https://spring.io/   -->
			<!-- ========================================= -->

			<!-- STARTERS -->
			<!-- Are define directly in modules because managing is -->
			<!-- already handle by 'spring-boot-starter-parent' -->

			<!-- DB driver -->

			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-connector-java.version}</version>
				<scope>runtime</scope>
			</dependency>

			<!-- Project Lombok - https://projectlombok.org/ -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- MapStruct - https://mapstruct.org/ -->
			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct</artifactId>
				<version>${org.mapstruct.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct-processor</artifactId>
				<version>${org.mapstruct.version}</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok-mapstruct-binding</artifactId>
				<version>${lombok-mapstruct-binding.version}</version>
			</dependency>

			<!-- JWT -->
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt</artifactId>
				<version>${jjwt.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<!-- ============== -->
	<!--  Dependencies  -->
	<!-- ============== -->

	<dependencies>
	</dependencies>

	<!-- ======= -->
	<!--  BUILD  -->
	<!-- ======= -->

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<!-- JaCoCo : Test coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>pre-unit-tests</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>pre-integration-tests</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>post-integration-tests</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>merge</id>
						<phase>verify</phase>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet
									implementation="org.apache.maven.shared.model.fileset.FileSet">
									<directory>${project.basedir}</directory>
									<includes>
										<include>**/*.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<destFile>target/jacoco/allTest.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>post-merge-report</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>target/jacoco/allTest.exec</dataFile>
							<outputDirectory>target/jacoco/</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
